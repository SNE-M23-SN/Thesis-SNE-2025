version: '3.8'

services:
  # CI Anomaly Detector Application
  ci-anomaly-detector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ci-anomaly-detector
    restart: unless-stopped
    network_mode: host
    environment:
      # Server Configuration
      - SERVER_PORT=${SERVER_PORT:-8282}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      
      # Spring AI Configuration
      - AI_TEMPERATURE=${AI_TEMPERATURE:-0}
      - AI_RESPONSE_FORMAT=${AI_RESPONSE_FORMAT:-JSON_OBJECT}
      - AI_BASE_URL=${AI_BASE_URL:-https://generativelanguage.googleapis.com}
      - AI_COMPLETIONS_PATH=${AI_COMPLETIONS_PATH:-/v1beta/openai/chat/completions}
      - AI_API_KEY=${AI_API_KEY}
      - AI_MODEL=${AI_MODEL:-gemini-2.5-flash-preview-05-20}
      
      # Database Configuration (External PostgreSQL)
      - DB_URL=${DB_URL}
      - DB_DIALECT=${DB_DIALECT:-org.hibernate.dialect.PostgreSQLDialect}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DDL_AUTO=${DB_DDL_AUTO:-update}
      - DB_SHOW_SQL=${DB_SHOW_SQL:-false}
      
      # Spring Configuration
      - APP_NAME=${APP_NAME:-ci-anomaly-detector}
      - JACKSON_TIMESTAMPS=${JACKSON_TIMESTAMPS:-false}
      
      # Logging Configuration
      - LOG_LEVEL_ROOT=${LOG_LEVEL_ROOT:-INFO}
      - LOG_LEVEL_APP=${LOG_LEVEL_APP:-INFO}
      - LOG_LEVEL_AI=${LOG_LEVEL_AI:-INFO}
      - LOG_PATTERN_CONSOLE=${LOG_PATTERN_CONSOLE:-%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}
      
      # RabbitMQ Configuration
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
      - RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      
      # Queue Configuration
      - QUEUE_NAME=${QUEUE_NAME:-Jenkins}
      - QUEUE_DLQ_NAME=${QUEUE_DLQ_NAME:-Jenkins.dlq}
      - QUEUE_TTL=${QUEUE_TTL:-150000}
      
      # AI Memory Configuration
      - AI_MEMORY_MAX_MESSAGES=${AI_MEMORY_MAX_MESSAGES:-100}
      - AI_SYSTEM_PROMPT_TEMPLATE=${AI_SYSTEM_PROMPT_TEMPLATE:-classpath:templates/system.st}
      
    volumes:
      # Optional: Mount logs directory for persistent logging
      - ./logs:/app/logs
      # Optional: Mount custom templates if needed
      - ./templates:/app/templates:ro



